File name: Readme (for the DOCKing system) 
Final Modified Date: 29/10/2015 
Confidence level: CL=1
Version of DOCKS: 1.5
Author: Hao-Chih,Lin (Jim,Lin)
	Internship student in Paris Observatory, graduated from DAA of NCKU in Taiwan.
Advisor: Boris Segret	
Email : F44006076@gmail.com  
Technical Note: MGT-009 (version 1.3)

Copyright 2015 LIN, Hao-Chih
License of DOCKS: Lesser General Public License (LGPL)
(Please see "License" file to read more detail)

====================================
=========Abstract of DOCKS==========
====================================
DOCKS is an abbreviation of "Design & Operation Cross-checKing Services", also called "the DOCKing System".
The DOCKing system is a high level software integration program for general CubeSat mission analysis.
The purpose of DOCKS is to create user friendly interface in order to make user easily test all necessary program/software.

====================================
===========Functionality============
====================================
In Version 1.5, DOCKing system provides several functions listed as follows: ("[]" means it is a module)
[Scenario-check]: Check definition of parameters in various type of files.
[PRODQUAT]: Create CubeSat quaternion data based on dynamic characteristics.
[EASYQUAT]: Create easy quaternion for CubeSat without considering dynamic characteristics.
[PRODTRAJ]: Create trajectory data by trajectory solver (optimization process).
[EASYTRAJ]: Create easy Keplerian/Circular orbit data by six orbital elements.
[EXESTELA]: Execute GUI version of STELA.
[PRODVTS]: Generate/Update .vts project file .
[EXEVTS]: Execute VTS.
[EXTRCEL]: Extract Celestia Add-on from VTS.

Notice: Users can decide which module should be executed in "Scenario" file, except the fist one, since [Scenario-check] is the
	core module in DOCKS, without it, all the other modules can not work successfully. 

====================================
===============Qt-GUI===============
====================================
From Version 1.5, DOCKS also provides Qt-based GUI.
Just click "DOCK_GUI_v1-5-1" exe-file, then the GUI will show up. 
By using Qt-GUI, almost all of path definitaion issues will be solved. 


====================================
========System Requirements=========
====================================
In order to get good result of DOCKS, the user should meet all requirements described below before launching DOCKS.
[Please see "MGT-009 v1.1" to find detail steps]
1. DOCKS was developed by Shell script, so it can only be executed in Linux environment (recommend Ubuntu 14.04).
2. Install Scilab/Xcos (with Celestlab & Aerospace blockset)
3. Install Octave
4. Install Python (with PyKEP)
4. Install Vts-Linux-32bits (Can be downloaded from CNES website: http://www.timeloop.fr/vts/en/index.html)
5. Make sure the VTS can execute "Celestia" without problems, if not, please follow the tutorial for fixing this problem in Technical Note (MGT-009 v1.1).
6. Install "STELA" (https://logiciels.cnes.fr/content/stela?language=en)


======================================
========How to download DOCKS=========
======================================
1.Open a terminal and change the directory which you want to install DOCSK, then enter following command:
(#Notice: No not type symbol '$', and PACKAGE_NAME_YOU_WANT means you should enter the name you want for DOCKS package.)
  $ git clone https://github.com/BIRDY-obspm/DOCKing_System.git PACKAGE_NAME_YOU_WANT
2.Then change the execution permission of whole package by tying command listed below:
  $ chmod -R a+x PACKAGE_NAME/


====================================
==========How to use DOCKS==========
====================================
##Qt-GUI##
1.Clcik special icon called "DOCK_GUI_v1-5-1", it will launch the Qt-GUI.
2.First, you have to press "Open" OR "New" to load or create Scenario file.
3.Then do the same thing for Configuration file.
4.After modifying parameters, just click "Check and Execution" button.
5.You can find the result in the white based textbrowser.

##Terminal##
(a) Go into the “Input/example” folder, the user can find files as follows:
	BIRDY_scenario: module selection, simulation time, flags, parameter settings for [EASYQUAT] and [EASYTRAJ] module.
	BIRDY_configuration: output location for each module, CCSDS parameters (e.g. CubeSat name, orbiting around Earth or Mars, etc. )
	BIRDY_VTS_example.vts: the VTS project file.
	CUBESAT_AEM_ATTITUDE_BBQ.TXT: VTS-CIC format CubeSat quaternion data.
	CUBESAT_OEM_POSITION.TXT: VTS-CIC format CubeSat trajectory data.
	Easy_quat_seq_inputs_test: for [EASYQUAT] module “sequence-inputs” mode.
	PFM-002_Birdy_1.5.xml: BIRDY mission IDM-CIC project file.
	PFM-002_Birdy_1.5_wo-FoV.3ds: BIRDY 3DS model for VTS software. 

(b) The user could create new files or modify the given templates to meet their requirements.
    All necessary parameters listed in “Scenario” and “Configuration” should be defined correctly.
(c) If needed, describe sequence inputs for [EASYQUAT] module.
(d) DOCKS can also check key data from IDM-CIC project file, if the user wants to use this function, remember to define the file path of "IDM_CIC_file" in Scenario file.
(e) After defining all necessary parameters, the user can decide which modules will be executed at this time through the "Module Selection" in Scenario file. For example,
    if the user doesn't want to execute the "PRODQUAT" module, he adds a marker like "#" in front of "PRODQUAT" name, e.g. #PRODQUAT
(f) Open a Terminal and change directory to the main folder (using command “cd”)
(g) Execute DOCKS with the following commands: (do not type the symbol "$")
    $ ./dock THE_RELATIVE_PATH_OF_SCENARIO
or
    $ ./dock THE_ABSOLUTE_PATH_OF_SCENARIO
or 
    $ ./dock

for example:
$ ./dock Input/BIRDY_scenario
$ ./dock home/birdy/Software/DOCK_v1-3/Input/BIRDY_scenario
Commands listed above are all valid.
In addition, if the user only type "./dock", DOCKS will require you to enter the Scenario file. Again, in this situation, both absolute and relative path are acceptable.
(h) About the result, users can find latest generated files in "Output" folder as well as log files.
(i) Users should not be allowed to add/remove or modify any file/folder in DOCKS except files located in “Input” folder.  (For developer, please see §VI.)
