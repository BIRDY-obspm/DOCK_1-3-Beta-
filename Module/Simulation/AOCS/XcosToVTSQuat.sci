// This function will write the attitude of the satellite from the simulation to a file in CIC fromat


function [] = XcosToVTSQuat(Attitude_Data,SatDate, Attitude_Type, Sat_Name, Directory, file_name)
    
    clc;
    
    dims = 2; // for string array concatenation
    // Header  definition
    Header.version = ['CIC_AEM_VERS = 1.0', 'CIC_OEM_VERS = 1.0'];
    Header.comment = ['COMMENT Generated by BIRDY AOCS TEAM'];
    Header.time    = getdate();
    Header.time1    = [Header.time(1),Header.time(2), Header.time(6),Header.time(7),Header.time(8),Header.time(9), Header.time(10)];
    
    correction_month = "";
    correction_day   = "";
    correction_hour = "";
    correction_mn = "";
    correction_sec = "";
    
    if Header.time(6) <10 then
        correction_day   = '0';
    end
    if Header.time(2) <10 then
        correction_month = '0';
    end
    if Header.time(7) < 10 then
        correction_hour = '0';
    end
    if Header.time(8) <10 then
        correction_mn = '0';
    end
    
    if Header.time(9) <10 then
        correction_sec = '0';
    end
    Header.time2    = strcat(['CREATION_DATE = ', string(Header.time1(1)),"-",strcat([correction_month,string(Header.time1(2))]),"-",strcat([correction_day,string(Header.time1(3))]),"T",strcat([correction_hour,string(Header.time1(4))]),":",strcat([correction_mn,string(Header.time1(5))]),":",strcat([correction_sec,string(Header.time1(6))]),".",string(Header.time1(7)) ]);
    Header.originator = ['ORIGINATOR = BIRDY AOCS TEAM'];
    Header.meta_Start = ['META_START'];
    Header.sat_name   = strcat(['OBJECT_NAME = ', Sat_Name]);
    Header.ID         = strcat(['OBJECT_ID = ', Sat_Name]);
    Header.Ref_frame_A  = ['REF_FRAME_A = EME2000'];
    Header.Ref_frame_B  = ['REF_FRAME_B = SC_BODY_1'];
    Header.attitude_dir = ['ATTITUDE_DIR = A2B'];
    Header.time_system  = ['TIME_SYSTEM = UTC'];
    Header.attitude_type = strcat(['ATTITUDE_TYPE = ', Attitude_Type]);
    Header.euler_sequence = ['EULER_ROT_SEQ = 313'];
    Header.meta_stop      = ['META_STOP'];
    
     
    // Possible Attitude Types
    Attitude = ['QUATERNION', 'EULER ANGLE', 'POSITION'];
    
    
    // Check whcih attitude the user has input
    if Attitude_Type == Attitude(1) then
        Header.euler_sequence = "";
    end
    
    if Attitude_Type == Attitude(3) then
        Header.version = Header.version(2);
    else
        Header.version = Header.version(1);
    end
    
    // Check if the directory provided is correct
    directory.check = isdir(Directory);
    if directory.check == 'F' then
        error("This Directory you provided does not exist or the Name is incorrect. Please provide a suitable directory");
    else
        FileDirectory = strcat([Directory, file_name])
    end
    
    // Prepare the header file
    HEADER = [Header.version; Header.comment;Header.time2; Header.originator;""; Header.meta_Start; ""; Header.sat_name; Header.ID; Header.Ref_frame_A; Header.Ref_frame_B; Header.attitude_dir; Header.time_system; Header.attitude_type; Header.euler_sequence; ""; Header.meta_stop; ""];
    
    // For Date
    for count = 1:length(Attitude_Data(:,1))
        Date(count,1) = SatDate;
        Date(count,2) = 30*count;
    end
    
    Formated_Attitude_Data = [Date, Attitude_Data];
    // Writing to file
    
    fprintfMat(FileDirectory, Formated_Attitude_Data,"%15g",HEADER);
 
 
endfunction
